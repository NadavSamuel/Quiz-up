{"version":3,"sources":["services/toyService.js","store/actions/toyActions.js","cmps/ToyPreview.jsx","cmps/ToyList.jsx","cmps/ToyFilter.jsx","cmps/ToyAdd.jsx","pages/ToyApp.jsx","services/httpService.js","services/reviewService.js","cmps/AddReview.jsx","services/socketService.js","store/actions/reviewActions.js","cmps/ChatRoom.jsx","pages/ToyDetails.jsx","cmps/NavBar.jsx","pages/ToyEdit.jsx","pages/Dashboard.jsx","pages/About.jsx","services/userService.js","pages/Login.jsx","store/actions/userActions.js","cmps/Footer.jsx","App.jsx","serviceWorker.js","store/reducers/toyReducer.js","store/reducers/userReducer.js","store/reducers/reviewReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","resolveData","res","data","toyService","query","filter","Object","keys","map","key","join","console","log","get","then","getById","toyId","remove","delete","save","toy","_id","put","toyToPost","price","name","type","inStock","post","loadToys","dispatch","toys","removeToy","ToyPreview","connect","state","toyReducer","loggedInUser","userReducer","loggedinUser","className","to","isAdmin","src","imgUrl","alt","ToyList","ToyFilter","filterText","sortBy","handleChange","target","value","field","setState","prevState","props","onSetFilter","submitForm","ev","preventDefault","setSort","onSubmit","this","TextField","onChange","placeholder","id","label","variant","Select","labelId","MenuItem","ButtonGroup","color","aria-label","Button","onClick","Component","ToyAdd","toyName","onAddToy","initialValues","text","values","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","Fab","disabled","_ToyApp","filterBy","addToy","onSortName","onSortPrice","mapDispatchToProps","newToy","ToyApp","httpService","endpoint","ajax","a","method","url","dir","response","status","window","location","assign","reviewService","add","queryStr","reviewId","review","addedReview","socket","_AddReview","reviewToEdit","txt","addReview","loadReviews","reviews","byUser","username","AddReview","reviewReducer","socketService","setup","io","terminate","on","eventName","cb","off","emit","_ChatRoom","msg","from","msgs","topic","userTyping","setUserTyping","user","getHistory","history","socketAddMsg","msgHandleChange","sendMsg","isTyping","length","idx","autoComplete","autoFocus","ChatRoom","_ToyDetails","onDeleteToy","push","match","params","createdAt","ToyDetails","NavBar","_ToyEdit","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","secure_url","handleInput","onSaveToy","saveToy","defaultValue","toyToSave","ToyEdit","_Dashboard","getObjectMap","reduce","acc","getCounterMap","getBarData","typeNames","toyPrices","amontOfType","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","toFixed","getPieData","objectMap","year","substring","width","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","min","Dashboard","_About","lat","lng","onMarkerClick","onInfoWindowClose","onMapClicked","mapProps","latLng","changePos","city","pos","initialCenter","center","google","zoom","position","onClose","About","GoogleApiWrapper","apiKey","userService","login","credentials","_handleLogin","sessionStorage","setItem","_Login","password","onLogin","required","Login","Footer","href","App","component","path","Boolean","hostname","initialState","users","selectedReview","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2bca65ba.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\n\r\nconst BASE_URL = (process.env.NODE_ENV !== 'development')\r\n    ? '/api/toy'\r\n    : 'http://localhost:3030/api/toy';\r\n\r\n// const BASE_URL = 'http://localhost:3035/api/toy'\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\nconst resolveData = res => res.data\r\n\r\nexport const toyService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save\r\n}\r\n\r\nfunction query(filter) {\r\n    // return axios.get(BASE_URL,{params:filterBy}).then(resolveData)\r\n    // .then(toys=>toys)\r\n    let query = '';\r\n    if (filter) {\r\n        query = '?' + Object.keys(filter).map(key => key + '=' + filter[key]).join('&');\r\n    }\r\n    console.log('query is',query);\r\n    return axios.get(`${BASE_URL}${query}`).then(resolveData)\r\n\r\n\r\n    // var queryParams = new URLSearchParams()\r\n    // // posts?_sort=views&_order=asc\r\n    // if (filterBy.name) return axios.get(`${BASE_URL}?_sort=name&_order=asc`).then(resolveData)\r\n    // // if(filterBy==='names') queryParams.set('_sort=name&_order=asc')\r\n    // if (filterBy === 'price') return axios.get(`${BASE_URL}?_sort=price&_order=asc`).then(resolveData)\r\n    // if (filterBy.name) queryParams.set('name', filterBy.name)\r\n    // if (filterBy.inStock) queryParams.set('inStock', filterBy.inStock)\r\n    // if (filterBy.inStock) queryParams.set('inStock', filterBy.inStock)\r\n    // if (filterBy.inStock === 'all') return axios.get(`${BASE_URL}`).then(resolveData)\r\n\r\n    // return axios.get(`${BASE_URL}?${queryParams}`)\r\n    //     .then(resolveData)\r\n}\r\n\r\n\r\nfunction getById(toyId) {\r\n    return axios.get(`${BASE_URL}/${toyId}`)\r\n        .then(resolveData)\r\n\r\n}\r\n\r\nfunction remove(toyId) {\r\n    return axios.delete(`${BASE_URL}/${toyId}`)\r\n}\r\n\r\nfunction save(toy) {\r\n\r\n    // if (toy._id) {\r\n    //     return axios.put(`${BASE_URL}/${toy._id}`, toy).then(resolveData)\r\n    //         .then(savedToy => savedToy)\r\n    // } else {\r\n    //     return axios.post(BASE_URL, toy).then(resolveData)\r\n    //         .then(savedToy => savedToy)\r\n\r\n    if (toy._id) {\r\n        return axios.put(`${BASE_URL}/${toy._id}`, toy)\r\n    } else {\r\n        const toyToPost = {\r\n            price: 56,\r\n            name: toy,\r\n            type: \"Funny\",\r\n            inStock: true\r\n\r\n        }\r\n        return axios.post(BASE_URL, toyToPost).then(resolveData)\r\n    }\r\n}\r\n\r\n\r\n// CRUDL -  create read update delete list\r\n","import { toyService } from \"../../services/toyService\"\r\n\r\nexport function loadToys(filter) {\r\n    return dispatch => {\r\n        toyService.query(filter).then(toys => {\r\n            dispatch({ type: 'SET_TOYS', toys })\r\n        })\r\n    }\r\n}\r\n\r\nexport function removeToy(toy) {\r\n    return dispatch => {\r\n        toyService.remove(toy._id).then(() => {\r\n            dispatch({ type: 'REMOVE_TOY', toy })\r\n        })\r\n    }\r\n}\r\n\r\nexport function addToy(toyName) {\r\n    console.log('im here:',toyName);\r\n    return dispatch => {\r\n        toyService.save(toyName).then((newToy => {\r\n            dispatch({ type: 'ADD_TOY', newToy })\r\n        }))\r\n    }\r\n}\r\n\r\nexport function saveToy(toyToSave) {\r\n    return dispatch => {\r\n        toyService.save(toyToSave).then(() => {\r\n            dispatch({ type: 'UPDATE_TOY', toyToSave })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport function _ToyPreview({ toy, loggedInUser }) {\r\n    return (\r\n        <div className=\"toy-preview\">\r\n            <h3>{toy.name}</h3>\r\n            <h4>{toy.price}$</h4>\r\n            <h5>Category: {toy.type}</h5>\r\n            {toy.inStock && 'This toy is on stock!'}\r\n            {!toy.inStock && 'Out of stock'}\r\n            <div><NavLink to={`/toy/${toy._id}`}>Check It Out!</NavLink></div>\r\n            {loggedInUser && loggedInUser.isAdmin && <div><NavLink to={`/toy/edit/${toy._id}`}>Edit</NavLink></div>}\r\n            <img src={toy.imgUrl} alt=\"\"/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nexport const ToyPreview = connect(mapStateToProps)(_ToyPreview)","import React from 'react'\r\nimport { ToyPreview } from './ToyPreview'\r\n\r\nexport function ToyList({ toys }) {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {\r\n                toys.map(toy => <ToyPreview toy={toy} key={toy._id} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport class ToyFilter extends Component {\r\n    state = {\r\n        filter: {\r\n            filterText: '',\r\n            inStock: 'all',\r\n            sortBy: 'price'\r\n\r\n        },\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target.value, '@TARGET');\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filter: { ...prevState.filter, [field]: value } }), () => {\r\n            this.props.onSetFilter(this.state.filter); console.log(this.state)\r\n        })\r\n    }\r\n\r\n    submitForm = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.onSetFilter(this.state.filter)\r\n    }\r\n    // onSortName = () => {\r\n    //     this.props.onSortName()\r\n    // }\r\n    // onSortPrice = () => {\r\n    //     this.props.onSortPrice()\r\n    // }\r\n    setSort = (sortBy) => {\r\n        this.setState({ filter: { ...this.state.filter, sortBy } },\r\n            () => this.props.onSetFilter(this.state.filter))\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"toy-filter\">\r\n\r\n\r\n                <form onSubmit={this.submitForm}>\r\n                    <TextField className=\"search-input\" onChange={this.handleChange} type=\"text\" name=\"filterText\" placeholder=\"Search toy...\" id=\"outlined-basic\" label=\"SEARCH\" variant=\"outlined\" />\r\n\r\n                    <Select name=\"inStock\"\r\n                        value={this.state.filter.inStock}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        onChange={this.handleChange}>\r\n                        <MenuItem value='all'>All</MenuItem>\r\n                        <MenuItem value={'yes'}>In stock</MenuItem>\r\n                        <MenuItem value={'no'}>Out of stock</MenuItem>\r\n                    </Select>\r\n\r\n\r\n                </form>\r\n                <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"contained primary button group\">\r\n                    <Button onClick={() => this.setSort('price')} >Sort By Price</Button>\r\n                    <Button className=\"special-btn\" onClick={() => this.setSort('name')} >Sort By Name</Button>\r\n                </ButtonGroup>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Formik, Form } from 'formik';\r\n\r\nexport class ToyAdd extends Component {\r\n\r\n    handleChange = (ev) => {\r\n        const toyName = ev.target.value\r\n        this.setState({ toyName })\r\n    }\r\n\r\n    submitForm = (ev) => {\r\n        ev.preventDefault()\r\n        console.log('adding:',this.state);\r\n        this.props.onAddToy(this.state.toyName)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                {/* <form onSubmit={this.submitForm}>\r\n                    <TextField onChange={this.handleChange} type=\"text\" placeholder=\"Add Toy...\" id=\"outlined-basic\" label=\"New Toy\" variant=\"outlined\" />\r\n                    <Fab color=\"primary\" aria-label=\"add\">\r\n                        <AddIcon onClick={this.submitForm} />\r\n                    </Fab>\r\n                </form> */}\r\n                {/* {Basic()} */}\r\n\r\n                <Formik\r\n                    initialValues={{ text: '' }}\r\n\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                            alert(JSON.stringify(values, null, 2));\r\n                            setSubmitting(false);\r\n                        }, 400);\r\n                    }}\r\n                >\r\n                    {({ isSubmitting }) => (\r\n                        <Form>\r\n                            <TextField name=\"text\" onChange={this.handleChange} type=\"text\" placeholder=\"Add Toy...\" id=\"outlined-basic\" label=\"New Toy\" variant=\"outlined\" />\r\n\r\n                            <Fab color=\"primary\" aria-label=\"add\">\r\n                                <AddIcon onClick={this.submitForm} type=\"submit\" disabled={isSubmitting} />\r\n                            </Fab>\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </section>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadToys, addToy } from '../store/actions/toyActions';\r\nimport { ToyList } from '../cmps/ToyList';\r\nimport { ToyFilter } from '../cmps/ToyFilter';\r\nimport { ToyAdd } from '../cmps/ToyAdd';\r\n\r\nexport class _ToyApp extends Component {\r\n    state = {\r\n        filterBy: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.loadToys()\r\n    }\r\n    onSetFilter = (filterBy) => {\r\n        // this.props.loadToys(filterBy)\r\n        this.setState({ filterBy }, () => this.props.loadToys(this.state.filterBy))\r\n    }\r\n    onAddToy = (toyName) => {\r\n        this.props.addToy(toyName)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { toys, loggedInUser } = this.props\r\n        if (!toys) return <div>Loading...</div>\r\n        return (\r\n            <div className=\"toy-app\">\r\n                <h1>Toy App</h1>\r\n                {loggedInUser && loggedInUser.isAdmin && <ToyAdd onAddToy={this.onAddToy} />}\r\n                <ToyFilter onSetFilter={this.onSetFilter} onSortName={this.onSortName} onSortPrice={this.onSortPrice} />\r\n                <ToyList toys={toys} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    addToy\r\n}\r\nexport const ToyApp = connect(mapStateToProps, mapDispatchToProps)(_ToyApp)\r\n","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import {httpService} from '../services/httpService'\r\n\r\nexport const reviewService= {\r\n  add,\r\n  query,\r\n  remove,\r\n};\r\n\r\n\r\n// return axios.get('api/toy/?id=1223&balance=13');\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}});\r\n\r\nfunction query(filterBy) {\r\n  if (filterBy) var queryStr = `?toyId=${filterBy.toyId}`;\r\n  return httpService.get(`review${queryStr || ''}`);\r\n}\r\n\r\nfunction remove(reviewId) {\r\n  return httpService.delete(`review/${reviewId}`);\r\n}\r\nasync function add(review) {\r\n  const addedReview  = await httpService.post(`review`, review);\r\n  return  addedReview\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addReview, loadReviews } from '../store/actions/reviewActions';\r\nexport class _AddReview extends Component {\r\n\r\n    state = {\r\n        reviewToEdit: {\r\n            txt: '',\r\n            toyId: ''\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadReviews(this.props.toyId);\r\n\r\n    }\r\n    handleChange = ev => {\r\n        const { name, value } = ev.target;\r\n        this.setState(prevState => ({\r\n            reviewToEdit: {\r\n                ...prevState.reviewToEdit,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    addReview = ev => {\r\n        ev.preventDefault();\r\n        this.props.addReview(this.state.reviewToEdit);\r\n        this.setState({ reviewToEdit: { txt: '', toyId: '' } });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"review-container\">\r\n                {this.props.reviews && <ul>\r\n                    {this.props.reviews.map(review =>\r\n                        (\r\n                            <div key={review._id} className=\"review-single\">\r\n                                <h3 key={review._id}>{review.txt}</h3>\r\n                                <p>\r\n                                    By {review.byUser.username}\r\n                                </p>\r\n                                <hr />\r\n                            </div>\r\n                        ))}\r\n                </ul>}\r\n\r\n                {/* ADD REVIEW SECTION */}\r\n                {this.props.loggedInUser && <h2>Add Review:</h2>}\r\n                {this.props.loggedInUser &&\r\n                    <form onSubmit={this.addReview}>\r\n                        <select\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reviewToEdit.toyId}\r\n                            name=\"toyId\"\r\n                        >\r\n                            <option value=\"\">Select Toy</option>\r\n                            {this.props.toys.map(toy => (\r\n                                <option key={toy._id} value={toy._id}>\r\n                                    {toy.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <textarea\r\n                            name=\"txt\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reviewToEdit.txt}\r\n                        ></textarea>\r\n                        <button>Submit</button>\r\n                    </form>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedinUser,\r\n        reviews: state.reviewReducer.reviews\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addReview,\r\n    loadReviews\r\n\r\n}\r\n\r\n\r\nexport const AddReview = connect(mapStateToProps, mapDispatchToProps)(_AddReview)\r\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport const socketService = {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","// import reviewService from '../services/reviewService';\r\n\r\nimport {reviewService} from '../../services/reviewService'\r\n\r\nexport function loadReviews(toyId) {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query({toyId});\r\n      dispatch({ type: 'SET_REVIEWS', reviews });\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review);\r\n      dispatch({ type: 'REVIEW_ADD', review: addedReview });\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err);\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { socketService } from '../services/socketService';\r\n\r\nexport class _ChatRoom extends Component {\r\n\r\n    state = {\r\n        msg: { from: 'Guest', txt: '' },\r\n        msgs: [],\r\n        topic: this.props.toy._id,\r\n        userTyping: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        // const user = this.getUser()\r\n        const { loggedInUser } = this.props\r\n        if (loggedInUser) this.setState({ msg: { ...this.state.msg, from: loggedInUser.username } })\r\n        // this.setState({ msg: { ...this.state.msg, from: user } })\r\n        socketService.setup();\r\n        socketService.emit('chat topic', this.state.topic);\r\n        socketService.on('chat addMsg', this.socketAddMsg)\r\n        socketService.on('getMsgs', this.getHistory)\r\n        socketService.on('user typing', this.setUserTyping)\r\n    }\r\n\r\n    setUserTyping = (user) => {\r\n        this.setState({ userTyping: user })\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('chat addMsg')\r\n        socketService.terminate()\r\n    }\r\n    getHistory = (history) => {\r\n        this.setState({ msgs: history })\r\n    }\r\n    socketAddMsg = (msg) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                msgs: [...prevState.msgs, msg]\r\n            }\r\n        }, console.log(this.state.msgs))\r\n\r\n\r\n    }\r\n\r\n\r\n    msgHandleChange = (ev) => {\r\n        socketService.emit('is typing', this.state.msg.from)\r\n        const { name, value } = ev.target;\r\n        if(!value) socketService.emit('is typing','')\r\n        this.setState(prevState => {\r\n            return {\r\n                msg: {\r\n                    ...prevState.msg,\r\n                    [name]: value\r\n                }\r\n            };\r\n        });\r\n    }\r\n    sendMsg = (ev) => {\r\n        ev.preventDefault();\r\n        socketService.emit('chat newMsg', this.state.msg);\r\n        this.setState({ msg: { ...this.state.msg, txt: '' }, isTyping: false });\r\n    }\r\n\r\n    render() {\r\n        const { userTyping } = this.state\r\n        return (\r\n            <div className=\"chat-box\">\r\n                <h3>Lets Talk About {this.props.toy.name}</h3>\r\n                {userTyping && < div > {userTyping} is typing...</div>}\r\n               <div className=\"main-chat\">\r\n                {\r\n                    this.state.msgs.length ?\r\n                        <ul className=\"chat-container\">\r\n                            {this.state.msgs.map((msg, idx) => {\r\n                                return <li key={idx}>\r\n                                    {msg.from}: {msg.txt}\r\n                                </li>\r\n                            })}\r\n                        </ul> : ''\r\n                }\r\n                 <form onSubmit={this.sendMsg}>\r\n                    <input autoComplete=\"off\" autoFocus\r\n                        type=\"text\"\r\n                        value={this.state.msg.txt} className=\"chat-input\"\r\n                        onChange={this.msgHandleChange}\r\n                        name=\"txt\"\r\n                    />\r\n                    <button>Send</button>\r\n                </form>\r\n            </div ></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedinUser\r\n\r\n    }\r\n}\r\nexport const ChatRoom = connect(mapStateToProps)(_ChatRoom)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { AddReview } from '../cmps/AddReview.jsx';\r\nimport { ChatRoom } from '../cmps/ChatRoom.jsx';\r\nimport { toyService } from '../services/toyService';\r\nimport { removeToy } from '../store/actions/toyActions'\r\nexport class _ToyDetails extends Component {\r\n\r\n    state = {\r\n        toy: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const toy = await toyService.getById(this.props.match.params.id)\r\n        this.setState({ toy })\r\n    }\r\n\r\n    onDeleteToy = () => {\r\n        this.props.removeToy(this.state.toy)\r\n        setTimeout(() => this.props.history.push('/toy'), 500)\r\n    }\r\n\r\n    render() {\r\n        const { toy } = this.state\r\n        const { loggedInUser } = this.props\r\n        if (!toy) return <span>Loading...</span>\r\n\r\n        return (\r\n            <div className=\"details-container\">\r\n                <h3>{toy.name}</h3>\r\n                <h4>{toy.price}$</h4>\r\n                <h5>Category: {toy.type}</h5>\r\n                {toy.inStock ? 'This toy is on stock!' : 'Out of stock'}\r\n                <h5>Created At {toy.createdAt}</h5>\r\n                {toy.imgUrl && <img src={toy.imgUrl} alt='No Img' />}\r\n                {loggedInUser && loggedInUser.isAdmin && <button onClick={this.onDeleteToy}>Delete Toy</button>}\r\n                <ChatRoom toy={toy} />\r\n                <AddReview toyId={toy._id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedinUser\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    removeToy\r\n}\r\n\r\n\r\nexport const ToyDetails = connect(mapStateToProps, mapDispatchToProps)(_ToyDetails)\r\n","import React from 'react';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function NavBar() {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <NavLink className=\"navlink\" to=\"/\"> Toy App</NavLink> <br/>\r\n            <NavLink className=\"navlink\" to=\"/about\"> About</NavLink><br/>\r\n            <NavLink className=\"navlink\" to=\"/login\"> Login</NavLink>\r\n            <NavLink className=\"navlink\" to=\"/dashboard\"> Dashboard</NavLink>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { toyService } from '../services/toyService';\r\nimport { connect } from 'react-redux';\r\nimport { removeToy, saveToy } from '../store/actions/toyActions'\r\nexport class _ToyEdit extends Component {\r\n\r\n    state = {\r\n        toy: null\r\n    }\r\n    componentDidMount() {\r\n        toyService.getById(this.props.match.params.id)\r\n            .then(toy => {\r\n                this.setState({ toy })\r\n            })\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const CLOUD_NAME = \"dsrtl41yz\"\r\n        const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', ev.target.files[0])\r\n        formData.append('upload_preset', 'ml_default');\r\n        try {\r\n            const res = await fetch(UPLOAD_URL, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const data = await res.json()\r\n            // console.log(data);\r\n            this.setState({ toy: { ...this.state.toy, imgUrl: data.secure_url } }, () => console.log(this.state))\r\n            return data\r\n\r\n        } catch (err) {\r\n            console.log('Got Error uploading the img:', err);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name\r\n        const value = (target.type === 'number') ? +target.value : target.value\r\n        this.setState(prevState => {\r\n            return {\r\n                toy: {\r\n                    ...prevState.toy,\r\n                    [field]: value\r\n                }\r\n            }\r\n        }, () => console.log(this.state, '@@@***'))\r\n    }\r\n\r\n    onSaveToy = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.saveToy(this.state.toy)\r\n        setTimeout(() => this.props.history.push('/toy'), 400)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { toy } = this.state\r\n        if (!toy) return <div>Loading...</div>\r\n        return (\r\n            <div className=\"edit-container\">\r\n                <h3>Want to edit your toy info? This is the right place!</h3>\r\n                <form onSubmit={this.onSaveToy}>\r\n                    <input onChange={this.handleInput} type=\"text\" name=\"name\" defaultValue={toy.name} />\r\n                    <input onChange={this.handleInput} type=\"text\" name=\"type\" defaultValue={toy.type} />\r\n                    <input onChange={this.handleInput} type=\"number\" name=\"price\" defaultValue={toy.price} />\r\n                    {toy.imgUrl && <img src={toy.imgUrl} alt='No Img' />}\r\n                    {/* <label> */}\r\n                <input type=\"file\" onChange={this.uploadImg} />\r\n                    {/* </label> */}\r\n                    <button>SAVE</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    removeToy,\r\n    saveToy\r\n}\r\nexport const ToyEdit = connect(mapStateToProps, mapDispatchToProps)(_ToyEdit)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadToys } from '../store/actions/toyActions';\r\nimport { Bar, Pie } from 'react-chartjs-2'\r\n\r\nexport class _Dashboard extends Component {\r\n    componentDidMount() {\r\n        this.props.loadToys()\r\n    }\r\n\r\n    getObjectMap = () => {\r\n        const objectMap = this.props.toys.reduce((acc, toy) => {\r\n            if (!acc[toy.type]) acc[toy.type] = 0\r\n            acc[toy.type] += toy.price\r\n            return acc\r\n        }, {})\r\n        return objectMap;\r\n    }\r\n\r\n    getCounterMap = () => {\r\n        const counterMap = this.props.toys.reduce((acc, toy) => {\r\n            if (!acc[toy.type]) acc[toy.type] = 0\r\n            acc[toy.type]++\r\n            return acc\r\n\r\n        }, {})\r\n        return counterMap\r\n    }\r\n\r\n    getBarData = () => {\r\n\r\n        const typeNames = Object.keys(this.getObjectMap())\r\n        const toyPrices = Object.values(this.getObjectMap())\r\n        const amontOfType = Object.values(this.getCounterMap())\r\n        const avgPrices = toyPrices.map((price, idx) => {\r\n            return +(price / amontOfType[idx]).toFixed(0)\r\n\r\n        })\r\n\r\n        return {\r\n            labels: typeNames,\r\n            datasets: [\r\n                {\r\n                    label: 'Average price',\r\n                    backgroundColor: 'rgba(255,99,132,0.2)',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    borderWidth: 2,\r\n                    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                    hoverBorderColor: '#ff6384',\r\n                    data: avgPrices\r\n                }\r\n            ]\r\n        }\r\n\r\n    }\r\n\r\n    getPieData = () => {\r\n        const objectMap = this.props.toys.reduce((acc, toy) => {\r\n            const year = toy.createdAt.substring(0, 4)\r\n            if (!acc[year]) acc[+year] = 0\r\n            acc[year]++\r\n            return acc\r\n}, {})\r\n\r\n        return {\r\n            labels: Object.keys(objectMap),\r\n            datasets: [{\r\n                data: Object.values(objectMap),\r\n                backgroundColor: [\r\n                    '#FF6384',\r\n                    '#36A2EB',\r\n                    '#FFCE56',\r\n                    '#FFEE11',\r\n                    '#40434E',\r\n                    '#52154E',\r\n                    '#C17817',\r\n                    '#3F784C',\r\n                    '#B20D30',\r\n                    '#F0E2E7',\r\n                    '#3F84E5',\r\n                    '#af73e1'\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    '#FF6384',\r\n                    '#36A2EB',\r\n                    '#FFCE56',\r\n                    '#FFEE11',\r\n                    '#40434E',\r\n                    '#52154E',\r\n                    '#C17817',\r\n                    '#3F784C',\r\n                    '#B20D30',\r\n                    '#F0E2E7',\r\n                    '#3F84E5',\r\n                    '#af73e1'\r\n                ]\r\n            }]\r\n        };\r\n    }\r\n    render() {\r\n        if (!this.props.toys.length) return <div>Loading</div>\r\n        return (\r\n            <section className=\"dashboard-container\">\r\n                <h1>Dashboard</h1>\r\n                <h2>Average price per Toy category/type</h2>\r\n                <Bar data={this.getBarData()} width={5} height={1} options={{\r\n                    maintainAspectRatio: true, scales: { yAxes: [{ ticks: { beginAtZero: true, min: 0,  } }] }\r\n                }} />\r\n                <h2>Toys per year</h2>\r\n                <Pie width={3} height={1} data={this.getPieData()} />\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n\r\n}\r\n\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\n\r\nexport class _About extends Component {\r\n\r\n    state = {\r\n        lat: 32.0853,\r\n        lng: 34.7818\r\n    }\r\n\r\n\r\n    onMarkerClick = (ev) => {\r\n        console.log(ev);\r\n    }\r\n\r\n\r\n    onInfoWindowClose = (ev) => {\r\n        console.log(ev);\r\n    }\r\n\r\n\r\n    onMapClicked = (mapProps, map, ev) => {\r\n        this.setState({ lat: ev.latLng.lat(), lng: ev.latLng.lng() })\r\n    }\r\n    changePos = (city) => {\r\n        const pos = {\r\n            lat: '',\r\n            lng: ''\r\n        }\r\n        switch (city) {\r\n            case 'haifa':\r\n                pos.lat = 32.794044\r\n                pos.lng = 34.989571\r\n                break;\r\n            case 'bat-yam':\r\n                pos.lat = 32.017136\r\n                pos.lng = 34.745441\r\n                break;\r\n            case 'eilat':\r\n                pos.lat = 29.55805  \r\n                pos.lng = 34.94821\r\n                break;\r\n\r\n            default:\r\n                pos.lat = 32.017136\r\n                pos.lng = 34.745441\r\n                break;\r\n        }\r\n        this.setState(pos)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h1>About Page</h1>\r\n                <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"contained primary button group\">\r\n                    <Button onClick={() => this.changePos('haifa')} >Haifa</Button>\r\n                    <Button onClick={() => this.changePos('batyam')} >Bat-Yam</Button>\r\n                    <Button onClick={() => this.changePos('eilat')} >Eilat</Button>\r\n                </ButtonGroup>\r\n                <Map initialCenter={this.state} center={this.state} google={this.props.google} zoom={10} onClick={this.onMapClicked}>\r\n\r\n                    <Marker onClick={this.onMarkerClick}\r\n                        name={'Current location'} />\r\n                    <Marker position={{ lat: 32.2953, lng: 34.8822 }} />\r\n                    <Marker position={{ lat: 32.3803, lng: 35.0822 }} />\r\n\r\n                    <InfoWindow onClose={this.onInfoWindowClose}>\r\n                        <div>\r\n                            <h1>InfoWindow</h1>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport const About = GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDV3aMtXNZ4Q87UKlasdj0gHhEP2xEEqFY')\r\n})(_About)\r\n","import {httpService} from './httpService'\r\n\r\n\r\n\r\nexport const userService = {\r\n    login,\r\n    // logout,\r\n    // signup,\r\n    // getUsers,\r\n    // getById,\r\n    // remove,\r\n    // update\r\n}\r\n\r\nasync function login(credentials) {\r\n    const user = await httpService.post('auth/login', credentials)\r\n    return _handleLogin(user)\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}","import React, { Component } from 'react'\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { onLogin } from '../store/actions/userActions.js'\r\n\r\nexport class _Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n\r\n    }\r\n    onLogin = async ev => {\r\n        if (!this.state.username || !this.state.password) return alert('Please enter user/password')\r\n        this.props.onLogin(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props\r\n        console.log('logged in:',loggedInUser);\r\n        return (\r\n            <div>\r\n                <h1>Login page</h1>\r\n                {!loggedInUser && <form className=\"login-form\" onSubmit={this.onLogin}>\r\n                    <TextField autoFocus required onChange={this.handleChange} name=\"username\" id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\r\n                    <TextField required onChange={this.handleChange} name=\"password\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.onLogin}>Submit</Button>\r\n                </form>}\r\n                {loggedInUser && <h2>Welcome,{loggedInUser.username}</h2>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onLogin\r\n}\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","import { userService } from \"../../services/userService\"\r\n\r\nexport function onLogin(credentials) {\r\n    return async dispatch => {\r\n        const user = await userService.login(credentials)\r\n        dispatch({ type: 'SET_USER', user })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nexport  function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <a href=\"https://www.facebook.com/tal.lahyani\">\r\n            <FacebookIcon className=\"facebook-icon\"/></a>\r\n            Copyrights Ⓒ Tal Lahyani\r\n            <a href=\"https://www.linkedin.com/in/tal-lahyani-0b84251a5/\">\r\n            <LinkedInIcon className=\"linkedin-icon\"/></a>\r\n\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\n\nimport {ToyApp} from './pages/ToyApp'\nimport { ToyDetails } from './pages/ToyDetails';\nimport { NavBar } from './cmps/NavBar';\nimport { ToyEdit } from './pages/ToyEdit';\nimport { Dashboard } from './pages/Dashboard';\nimport {About} from './pages/About'\nimport { Login } from './pages/Login';\nimport { Footer } from './cmps/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <Switch>\n        <Route component={ToyEdit} path='/toy/edit/:id'/>\n        <Route component={ToyDetails} path='/toy/:id'/>\n        <Route component={Dashboard} path='/dashboard'/>\n        <Route component={About} path='/about'/>\n        <Route component={Login} path='/login'/>\n        <Route component={ToyApp} path='/'/>\n      </Switch>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    toys: []\r\n}\r\nexport function toyReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_TOYS':\r\n            return {\r\n                ...state,\r\n                toys: action.toys\r\n            }\r\n        case 'REMOVE_TOY':\r\n            return {\r\n                ...state,\r\n                toys: state.toys.filter(toy => {\r\n                    return toy._id !== action.toy._id\r\n                })\r\n            }\r\n        case 'ADD_TOY':\r\n            return { ...state, toys: [action.newToy, ...state.toys] }\r\n\r\n        case 'UPDATE_TOY':\r\n        case 'UPDATE_TODO':\r\n            // return {\r\n            //     ...state, todos: state.todos.map(todo => {\r\n            //         if (todo._id === action.todo._id) return action.todo\r\n            //         return todo;\r\n            //     })\r\n            // }\r\n            return {\r\n                ...state, toys: state.toys.map(toy => {\r\n                    if (toy._id === action.toyToSave._id) return action.toyToSave\r\n                    return toy;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedinUser: null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedinUser: action.user\r\n            }\r\n        case 'SET_USERS:':\r\n            return { ...state,\r\n                 loggedinUser: action.user }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    reviews: [],\r\n    selectedReview: null\r\n  };\r\n  \r\n  export function reviewReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n      case 'SET_REVIEWS':\r\n        return { ...state, reviews: action.reviews };\r\n      case 'REVIEW_ADD':\r\n        return { ...state, reviews: [...state.reviews, action.review] };\r\n      case 'REVIEW_UPDATE':\r\n        return {\r\n          ...state,\r\n          reviews: state.reviews.map(review =>\r\n            review._id === action.review._id ? action.review : review\r\n          )};\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { toyReducer } from './reducers/toyReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\nimport {reviewReducer} from './reducers/reviewReducer'\r\nconst rootReducer = combineReducers({\r\n    toyReducer,\r\n    userReducer,\r\n    reviewReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/global.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store'\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}